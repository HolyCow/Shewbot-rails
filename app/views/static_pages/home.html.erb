<% if !@irc_channel.nil? || !@audio_url.nil? %>
	<div class="row">
		<div class="col-md-12">
			<a data-toggle="collapse" data-parent="#accordion" href="#ChatAndAudio">
	       <span class="glyphicon glyphicon-plus"></span> 
	       	<% if !@irc_channel.nil? %> IRC Chat <% end %>
	       	<% if !@irc_channel.nil? && !@audio_url.nil? %> and <% end %>
	       	<% if !@audio_url.nil? %> Live Player <% end %>
	    </a>
	   </div>
	</div>

	<div id="ChatAndAudio" class="panel-collapse collapse">
		<div class="row">
			<% if !@irc_channel.nil? %>
				<div class="col-md-8">
					<iframe src="http://webchat.freenode.net/?channels=<%= @irc_channel %>" width="100%" height="500px"></iframe>
				</div>
			<% end %>
			<% if !@audio_url.nil? %>
				<div class="col-md-4">
					<audio id="player" controls>
			      <source src="<%= @audio_url %>" type="audio/mpeg">
			    </audio>
				</div>
			<% end %>
		</div>
	</div>
<% end %>

<div class="row">
	<div class="col-md-3">
		<h2 id="currentshowtitle"><%= @current_show_title %></h2>
		<p>
			<span id="viewers">1 person</span> viewing this page
			<br/>
			Refresh in <span id="refresh">10</span>
		</p>
	</div>
	<div class="col-md-9">
		<ul class="nav nav-tabs">
		  <li class="active"><a href="#titlescontent" data-toggle="tab">Titles</a></li>
		  <li><a href="#linkscontent" data-toggle="tab">Links</a></li>
		</ul>

		<!-- Tab panes -->
		<div class="tab-content">
		  <div class="tab-pane active" id="titlescontent">
				<div id="titles" class="row">Loading...</div>
			</div>
			<div class="tab-pane" id="linkscontent">
				<div id="links" class="row">Loading...</div>
			</div>
		</div>
	</div>
</div>


<script id="headerTemplate" type="text/template">
<tr>
	<th id="latest">Newest to Oldest</th>
	<th id="title">Title</th>
	<th id="submitter">Submitter</th>
	<th id="votes">Votes</th>
</tr>
</script>
<script id="titleTemplate" type="text/template">
	<td>
		<%% if (!voteid) { %>
			<span class="vote glyphicon glyphicon-arrow-up" id="<%%= id %>"></span>
		<%% } %>
	</td>
	<td><%%- title %></td>
	<td><%%= irc_user_name %></td>
	<td><%%= votes_count %></td>
</script>

<script id="linkHeaderTemplate" type="text/template">
<tr>
	<th id="link">Link</th>
	<th id="submitter">Submitter</th>
</tr>
</script>
<script id="linkTemplate" type="text/template">
	<td><a href="<%%- url %>"><%%- url %></a></td>
	<td><%%= irc_user_name %></td>
</script>

<script>var titles = [];</script>
<script>var links = [];</script>

<script>
	(function ($) {

	    var Shewbot = {};
	    window.Shewbot = Shewbot;

	    Shewbot.Title = Backbone.Model.extend({
	    });

	    Shewbot.Titles = Backbone.Collection.extend({
	        url: "/titles.json",
	        model: Shewbot.Title,

					sortAttribute: "votes_count",
					sortDirection: 1,

					sortTitles: function (attr) {
						this.sortAttribute = attr;
						this.sort();
					},
			 
	        comparator: function(a, b) {
	        		console.log(this.sortAttribute);
	        		a_get = a.get(this.sortAttribute);
	        		b_get = b.get(this.sortAttribute);
	        		this.sortDirection = 1;
	        		if (this.sortAttribute === 'irc_user_name') {
	        			a_get = a_get.toUpperCase();
	        			b_get = b_get.toUpperCase();
	        			this.sortDirection = -1;
	        		}
	        		if (this.sortAttribute === 'title') {
	        			a_get = a_get.toUpperCase();
	        			b_get = b_get.toUpperCase();
	        			this.sortDirection = -1;
	        		}
	            return a_get < b_get ?  1 * this.sortDirection
	                 : a_get > b_get ? -1 * this.sortDirection
	                 : a.get("id") < b.get("id") ?  1 * this.sortDirection
	                 : a.get("id") > b.get("id") ? -1 * this.sortDirection
	                 :                              0;
	        }
	    });

	    Shewbot.TitleView = Backbone.View.extend({
	        tagName: "tr",
	        className: "title",
	        events: {},
	        template: $("#titleTemplate").html(),

	        render: function() {
	            var tmpl = _.template(this.template);

	            this.$el.html(tmpl(this.model.toJSON()));
	            //console.log(this);
	            return this;
	        }
	    });

	    Shewbot.TitleCollectionView = Backbone.View.extend({
	        tagName: "table",
	        className: "table",
	        template: $("#headerTemplate").html(),
	        initialize: function( titleSet ) {
	            this.titles = new Shewbot.Titles ( titleSet );
	            this.titles.on('sync', this.render, this);
	            this.titles.on('all', function() {
//	                console.log("event on title collection", arguments);
	            });
	            this.titles.fetch();
	            this.interval = window.setInterval( _.bind( function() { this.titles.fetch() }, this ), 10000);
	        },
	        render: function() {
	            this.$el.empty();
	            this.$el.append(this.template);

	            this.titles.each(function(title) {
	                var view = new Shewbot.TitleView({model: title});
	                this.$el.append(view.render().el);
	            }, this);

	            window.timercountdown = 10;

	            return this;
	        },
	        titleSort: function(attr) {
	        		this.titles.sortTitles(attr);
	        		this.render();
	        }
	    });

	    Shewbot.boot = function(container, titleSet) {
	        container = $(container);
	        titleTable = new Shewbot.TitleCollectionView( titleSet );
	        container.empty();
	        container.append(titleTable.render().el);
	        return titleTable;
	    }


	    // Link table

	    Shewbot.Link = Backbone.Model.extend({
	    });

	    Shewbot.Links = Backbone.Collection.extend({
	        url: "/links.json",
	        model: Shewbot.Link,
	    });

	    Shewbot.LinkView = Backbone.View.extend({
	        tagName: "tr",
	        className: "link",
	        events: {},
	        template: $("#linkTemplate").html(),

	        render: function() {
	            var tmpl = _.template(this.template);

	            this.$el.html(tmpl(this.model.toJSON()));
	            //console.log(this);
	            return this;
	        }
	    });

	    Shewbot.LinkCollectionView = Backbone.View.extend({
	        tagName: "table",
	        className: "table",
	        template: $("#linkHeaderTemplate").html(),
	        initialize: function( linkSet ) {
	            this.links = new Shewbot.Links ( linkSet );
	            this.links.on('sync', this.render, this);
	            this.links.on('all', function() {
//	                console.log("event on title collection", arguments);
	            });
	            this.links.fetch();
	            this.interval = window.setInterval( _.bind( function() { this.links.fetch() }, this ), 10000);
	        },
	        render: function() {
	            this.$el.empty();
	            this.$el.append(this.template);

	            this.links.each(function(link) {
	                var view = new Shewbot.LinkView({model: link});
	                this.$el.append(view.render().el);
	            }, this);

	            window.timercountdown = 10;

	            return this;
	        }
	    });

	    Shewbot.linkBoot = function(container, linkSet) {
	        container = $(container);
	        linkTable = new Shewbot.LinkCollectionView( linkSet );
	        container.empty();
	        container.append(linkTable.render().el);
	        return linkTable;
	    }


	} (jQuery));
</script>

<script>
	$(document).on("click", "span.vote", function(event) {
		//console.log("click" + event.target.id, this);
		$.get("/title/" + event.target.id + "/upvote");
		$(this).hide();
	});

	$(document).on("touchend", "span.vote", function(event) {
		//console.log("click" + event.target.id, this);
		$.get("/title/" + event.target.id + "/upvote");
		$(this).hide();
	});

	function sortByTitle() {
		titleTable.titleSort('title');
	}

	function sortBySubmitter() {
		titleTable.titleSort('irc_user_name');
	}

	function sortByVotes() {
		titleTable.titleSort('votes_count');
	}

	function sortByLatest() {
		titleTable.titleSort('id');
	}

	$(function() {
		var titleTable = Shewbot.boot($("#titles"), titles);
		var linkTable = Shewbot.linkBoot($("#links"), links);
	});

	$(document).on("click", "th#title", function(event) {
		sortByTitle();
	});

	$(document).on("touchend", "th#title", function(event) {
		sortByTitle();
	});


	$(document).on("click", "th#submitter", function(event) {
		sortBySubmitter();
	});

	$(document).on("touchend", "th#submitter", function(event) {
		sortBySubmitter();
	});

	$(document).on("click", "th#votes", function(event) {
		sortByVotes();
	});

	$(document).on("touchend", "th#votes", function(event) {
		sortByVotes();
	});

	$(document).on("click", "th#latest", function(event) {
		sortByLatest();
	});

	$(document).on("touchend", "th#latest", function(event) {
		sortByLatest();
	});

	function showupdate() {
		$.getJSON(  
		    '/shows/current',  
		    {},  
		    function(json) {  
		        $("#currentshowtitle").html(json.title);
		    }  
		);
	}
	setInterval(showupdate, 10000);

	function visitorupdate() {
		$.getJSON(  
		    '/sessions/visitor_count',  
		    {},  
		    function(json) {
		    		updatetext = json.visitors + ' people';
		    		if (json.visitors === 1) {
		    			updatetext = json.visitors + ' person';
		    		}
		        $("#viewers").html(updatetext);
		    }  
		);
	}
	setInterval(visitorupdate, 10000);

	function refreshupdate() {
		window.timercountdown = window.timercountdown - 1
    $("#refresh").html(window.timercountdown);
	}

	window.timercountdown = 10;

	setInterval(refreshupdate, 1000);

</script>